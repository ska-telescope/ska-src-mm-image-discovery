openapi: 3.0.4
info:
  title: Software Metadata API
  description: API specification for software metadata and execution details.
  version: 1.0.0

paths:
  /software/search:
    get:
      summary: Search for software metadata
      parameters:
        - name: software_type
          in: query
          required: true
          schema:
            type: string
            enum: [docker-container, jupyter-notebook, singularity-container]
        - name: query
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A list of software metadata matching the search query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SoftwareMetadata'

components:
  schemas:
    SoftwareMetadata:
      type: object
      properties:
        executable:
          type: object
          properties:
            name:
              type: string
              example: software-name
            type:
              type: string
              enum: [docker-container, jupyter-notebook, singularity-container]
            location:
              type: array
              items:
                type: string
              example: ["location-1", "location-2", "location-3"]
            platform:
              type: array
              items:
                type: string
              example: ["x86", "arm64"]
              nullable: true
            os:
              type: string
              example: "linux"
              nullable: true
            digest:
              type: string
              example: "OCI-digest"
              nullable: true
            network:
              type: object
              properties:
                ports:
                  type: array
                  items:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                        example: true
                      port:
                        type: integer
                        example: 8000
                      protocol:
                        type: string
                        enum: [HTTP, HTTPS, GRPC]
                      path:
                        type: string
                        example: "/"
              nullable: true
            entrypoint:
              type: string
              example: "/app/entrypoint.sh"
              nullable: true
            cmd:
              type: string
              nullable: true
            environment:
              type: object
              additionalProperties:
                type: string
              example:
                "env-key": "env-value"
              nullable: true

        metadata:
          type: object
          properties:
            description:
              type: string
              example: "description"
            version:
              type: string
              example: "sample version"
            tag:
              type: string
              example: "sample tag"
              nullable: true
            authorName:
              type: string
              example: "author name"
            specifications:
              type: array
              items:
                type: string
              example: ["if software has any granular type like carta, notebook"]
              nullable: true

        resources:
          type: object
          properties:
            cores:
              type: object
              properties:
                min:
                  type: integer
                  example: 1
                max:
                  type: integer
                  example: 5
                  nullable: true
            memory:
              type: object
              properties:
                min:
                  type: integer
                  example: 1
                max:
                  type: integer
                  example: 5
                  nullable: true
